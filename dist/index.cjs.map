{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import {\r\n\tipcMain,\r\n\tipcRenderer,\r\n\tIpcRendererEvent,\r\n\tIpcMainInvokeEvent,\r\n\tBrowserWindow\r\n} from 'electron'\r\n\r\n/** render process send message to main process  */\r\nconst renderToMain = <T = any>(channel: string, args: any[]) => {\r\n\treturn ipcRenderer.invoke(channel, args) as Promise<T>\r\n}\r\n\r\n/** main process receive message from render process  */\r\nconst mainFromRender = <T = any[]>(\r\n\tchannel: string,\r\n\tlistener: (event: IpcMainInvokeEvent, args: T) => any\r\n) => {\r\n\treturn ipcMain.handle(channel, listener)\r\n}\r\n\r\n/** main process send message to render process  */\r\nconst mainToRender = <T = any[]>(channel: string, args: any[]) => {\r\n\twindowList.forEach(w => w.webContents.send(channel, args))\r\n\treturn new Promise<T>(resolve => {\r\n\t\tipcMain.on('bi-directional', (e, args) => {\r\n\t\t\tresolve(args)\r\n\t\t})\r\n\t})\r\n}\r\n\r\n/**\r\n * render process receive message from main process\r\n * @param channel - The name of the event.\r\n * @param listener - The callback function\r\n */\r\nconst renderFromMain = <T = any[]>(\r\n\tchannel: string,\r\n\tlistener: (event: IpcRendererEvent, args: T) => void\r\n) => {\r\n\tipcRenderer.on(channel, (e, args) => {\r\n\t\tipcRenderer.send('bi-directional', listener(e, args))\r\n\t})\r\n}\r\n\r\n// use to have the main process send message to render process\r\nconst windowList: BrowserWindow[] = []\r\n\r\nfunction isBrowserWindow(v: unknown): v is BrowserWindow {\r\n\treturn Object.prototype.toString.call(v) === '[object Object]'\r\n}\r\n\r\nfunction isBrowserWindowArray(v: unknown): v is BrowserWindow[] {\r\n\treturn Object.prototype.toString.call(v) === '[object Array]'\r\n}\r\n\r\n/**\r\n * add window to communication channel\r\n * @public\r\n *\r\n * @param window - The window that needs to communicate\r\n */\r\nexport function addToChannel(window: BrowserWindow | BrowserWindow[]) {\r\n\tif (isBrowserWindow(window)) windowList.push(window)\r\n\tif (isBrowserWindowArray(window)) windowList.push(...window)\r\n}\r\n\r\n/**\r\n * render process receive message from main process\r\n * @public\r\n *\r\n * @param channel - The name of the event.\r\n * @param args - What you want to send\r\n */\r\nexport function send<T = any>(channel: string, ...args: any[]) {\r\n\tlet p = new Promise<T>(() => null)\r\n\r\n\tif (ipcMain) p = mainToRender(channel, args)\r\n\tif (ipcRenderer) {\r\n\t\tp = renderToMain(channel, args)\r\n\t\trenderToMain('forward', [channel, args])\r\n\t}\r\n\treturn p\r\n}\r\n\r\n/**\r\n * render process receive message from main process\r\n *\r\n * @public\r\n * @param channel - The name of the event.\r\n * @param listener - The callback function\r\n */\r\nexport function receive<T = any[]>(\r\n\tchannel: string,\r\n\tlistener: (event: IpcMainInvokeEvent | IpcRendererEvent, args: T) => any\r\n) {\r\n\tif (ipcMain) mainFromRender(channel, listener)\r\n\tif (ipcRenderer) renderFromMain(channel, listener)\r\n}\r\n\r\n/**\r\n * @beta\r\n * @returns 'fuckyou'\r\n */\r\nexport function say() {\r\n\treturn 'fuck you'\r\n}\r\n\r\n// proxy forward message from render process to render process\r\nreceive<[string, any]>('forward', (e, args) => mainToRender(args[0], args[1]))\r\n\r\nexport default {\r\n\taddToChannel,\r\n\tsend,\r\n\treceive\r\n}\r\n"],"names":["renderToMain","_0x2a1023","_0x3008df","ipcRenderer","mainFromRender","_0x713631","_0x1872d9","ipcMain","mainToRender","_0x1099fc","_0x2331a4","windowList","_0x4f41eb","Promise","_0x3b154c","_0x2f9d1c","renderFromMain","_0x1da850","_0x4cc2df","_0x3c6abf","_0x2a3510","isBrowserWindow","_0xa520ed","Object","isBrowserWindowArray","_0x4d5dde","addToChannel","_0x5839f0","send","_0x326420","_0x10467d","_0x27a1aa","receive","_0x935662","_0x410165","say","_0x2c0229","_0x24696f"],"mappings":"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"}